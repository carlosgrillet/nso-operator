---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.18.0
  name: nsos.orchestration.cisco.com.cisco.com
spec:
  group: orchestration.cisco.com.cisco.com
  names:
    kind: NSO
    listKind: NSOList
    plural: nsos
    singular: nso
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: NSO is the Schema for the nsoes API.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: NSOSpec defines the desired state of NSO.
            properties:
              adminCredentials:
                description: NSO admin credentials.
                properties:
                  passwordSecretRef:
                    description: NSO admin password Secret name.
                    type: string
                  username:
                    description: NSO admin username.
                    type: string
                required:
                - passwordSecretRef
                - username
                type: object
              env:
                description: NSO admin credentials.
                items:
                  description: EnvVar represents an environment variable present in
                    a Container.
                  properties:
                    name:
                      description: Name of the environment variable. Must be a C_IDENTIFIER.
                      type: string
                    value:
                      description: |-
                        Variable references $(VAR_NAME) are expanded
                        using the previously defined environment variables in the container and
                        any service environment variables. If a variable cannot be resolved,
                        the reference in the input string will be unchanged. Double $$ are reduced
                        to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e.
                        "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)".
                        Escaped references will never be expanded, regardless of whether the variable
                        exists or not.
                        Defaults to "".
                      type: string
                    valueFrom:
                      description: Source for the environment variable's value. Cannot
                        be used if value is not empty.
                      properties:
                        configMapKeyRef:
                          description: Selects a key of a ConfigMap.
                          properties:
                            key:
                              description: The key to select.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the ConfigMap or its key
                                must be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                        fieldRef:
                          description: |-
                            Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`,
                            spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
                          properties:
                            apiVersion:
                              description: Version of the schema the FieldPath is
                                written in terms of, defaults to "v1".
                              type: string
                            fieldPath:
                              description: Path of the field to select in the specified
                                API version.
                              type: string
                          required:
                          - fieldPath
                          type: object
                          x-kubernetes-map-type: atomic
                        resourceFieldRef:
                          description: |-
                            Selects a resource of the container: only resources limits and requests
                            (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
                          properties:
                            containerName:
                              description: 'Container name: required for volumes,
                                optional for env vars'
                              type: string
                            divisor:
                              anyOf:
                              - type: integer
                              - type: string
                              description: Specifies the output format of the exposed
                                resources, defaults to "1"
                              pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                              x-kubernetes-int-or-string: true
                            resource:
                              description: 'Required: resource to select'
                              type: string
                          required:
                          - resource
                          type: object
                          x-kubernetes-map-type: atomic
                        secretKeyRef:
                          description: Selects a key of a secret in the pod's namespace
                          properties:
                            key:
                              description: The key of the secret to select from.  Must
                                be a valid secret key.
                              type: string
                            name:
                              default: ""
                              description: |-
                                Name of the referent.
                                This field is effectively required, but due to backwards compatibility is
                                allowed to be empty. Instances of this type with an empty value here are
                                almost certainly wrong.
                                More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                              type: string
                            optional:
                              description: Specify whether the Secret or its key must
                                be defined
                              type: boolean
                          required:
                          - key
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                  required:
                  - name
                  type: object
                type: array
              image:
                description: Container image name.
                type: string
              labelSelector:
                additionalProperties:
                  type: string
                description: Labels for NSO resource.
                type: object
              nsoConfigRef:
                description: NSO configuration ConfigMap name.
                type: string
              ports:
                description: Service ports.
                items:
                  description: ServicePort contains information on service's port.
                  properties:
                    appProtocol:
                      description: |-
                        The application protocol for this port.
                        This is used as a hint for implementations to offer richer behavior for protocols that they understand.
                        This field follows standard Kubernetes label syntax.
                        Valid values are either:

                        * Un-prefixed protocol names - reserved for IANA standard service names (as per
                        RFC-6335 and https://www.iana.org/assignments/service-names).

                        * Kubernetes-defined prefixed names:
                          * 'kubernetes.io/h2c' - HTTP/2 prior knowledge over cleartext as described in https://www.rfc-editor.org/rfc/rfc9113.html#name-starting-http-2-with-prior-
                          * 'kubernetes.io/ws'  - WebSocket over cleartext as described in https://www.rfc-editor.org/rfc/rfc6455
                          * 'kubernetes.io/wss' - WebSocket over TLS as described in https://www.rfc-editor.org/rfc/rfc6455

                        * Other protocols should use implementation-defined prefixed names such as
                        mycompany.com/my-custom-protocol.
                      type: string
                    name:
                      description: |-
                        The name of this port within the service. This must be a DNS_LABEL.
                        All ports within a ServiceSpec must have unique names. When considering
                        the endpoints for a Service, this must match the 'name' field in the
                        EndpointPort.
                        Optional if only one ServicePort is defined on this service.
                      type: string
                    nodePort:
                      description: |-
                        The port on each node on which this service is exposed when type is
                        NodePort or LoadBalancer.  Usually assigned by the system. If a value is
                        specified, in-range, and not in use it will be used, otherwise the
                        operation will fail.  If not specified, a port will be allocated if this
                        Service requires one.  If this field is specified when creating a
                        Service which does not need it, creation will fail. This field will be
                        wiped when updating a Service to no longer need it (e.g. changing type
                        from NodePort to ClusterIP).
                        More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
                      format: int32
                      type: integer
                    port:
                      description: The port that will be exposed by this service.
                      format: int32
                      type: integer
                    protocol:
                      default: TCP
                      description: |-
                        The IP protocol for this port. Supports "TCP", "UDP", and "SCTP".
                        Default is TCP.
                      type: string
                    targetPort:
                      anyOf:
                      - type: integer
                      - type: string
                      description: |-
                        Number or name of the port to access on the pods targeted by the service.
                        Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
                        If this is a string, it will be looked up as a named port in the
                        target Pod's container ports. If this is not specified, the value
                        of the 'port' field is used (an identity map).
                        This field is ignored for services with clusterIP=None, and should be
                        omitted or set equal to the 'port' field.
                        More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
                      x-kubernetes-int-or-string: true
                  required:
                  - port
                  type: object
                type: array
              replicas:
                description: Number of NSO replicas desired.
                format: int32
                type: integer
              serviceName:
                description: Name of the headless service for NSO.
                type: string
            required:
            - adminCredentials
            - env
            - image
            - labelSelector
            - nsoConfigRef
            - ports
            - replicas
            - serviceName
            type: object
          status:
            description: NSOStatus defines the observed state of NSO.
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
